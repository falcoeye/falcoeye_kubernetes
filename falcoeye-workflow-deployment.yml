apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: falcoeye-workflow
  name: falcoeye-workflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: falcoeye-workflow
  template:
    metadata:
      labels:
        app: falcoeye-workflow
    spec:
      containers:
        - name: falcoeye-workflow
          image: falcoeye-workflow:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7000  # Add your service port
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          env:
            - name: FLASK_CONFIG
              value: development
            - name: FLASK_APP
              value: falcoeye
            - name: WORKFLOW_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: workflow-credentials
            - name: WORKFLOW_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: workflow-credentials
            - name: USER_ASSETS
              value: /user-assets/data/
            - name: TEMPORARY_DATA_PATH
              value: /falcoeye-temp/
            - name: DEPLOYMENT
              value: k8s  
          volumeMounts:
            - mountPath: /user-assets/
              name: user-assets-volume-mount
            - mountPath: /falcoeye-temp/
              name: falcoeye-temp-volume-mount
      volumes:
        - name: user-assets-volume-mount
          persistentVolumeClaim:
            claimName: user-assets-pvc
        - name: falcoeye-temp-volume-mount
          persistentVolumeClaim:
            claimName: falcoeye-temp-pvc